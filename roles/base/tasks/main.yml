---

- name: "Add {{ username}} to sudoers"
  copy:
    content: "{{ username }} ALL=(ALL) NOPASSWD: ALL"
    dest:  "/etc/sudoers.d/{{ username }}"
  tags: sudoers

- name: Install core packages from arch repos
  become: true
  pacman:
    name: "{{ package }}"
    state: present
  with_items: "{{ core_packages | default(core_packages) }}"
  loop_control:
    loop_var: package
    label: "{{ package }}"
  tags: core, utils

- name: Check if yay is already installed
  stat:
    path: /usr/bin/yay
  register: yaybin
  tags: yay

- name: Report if yay ins already installed
  when: yaybin.stat.exists
  debug:
    msg: "/opt/yay already exists"
  tags: yay

- name: Download yay to manage AUR packages
  become: true
  when: not yaybin.stat.exists
  git:
    repo: https://aur.archlinux.org/yay.git
    dest: /opt/yay
  tags: yay

- name: "Set {{ username }} as owner for yay"
  shell: "chown -R {{ username }}:{{ username }} /opt/yay"
  tags: yay

- name: "Build yay"
  become_user: "{{ username }}"
  when: not yaybin.stat.exists
  command: makepkg --noconfirm -si
  args:
    chdir: /opt/yay
  tags: yay

- name: Install VirtualBox guest utils package
  pacman:
    name: virtualbox-guest-utils
    state: present
  when: is_virtualbox_installation
  tags: virtualbox

- name: Enabling VirtualBox service
  systemd:
    name: vboxservice.service
    enabled: yes
  when: is_virtualbox_installation
  tags: virtualbox

- name: Clone dotfiles repo
  become_user: "{{ username }}"
  git:
    repo: "{{ dotfiles_repo_url }}"
    version: "{{ dotfiles_repo_branch }}"
    dest: "{{ dotfiles_dir }}"
    force: yes
  tags: dotfiles

- name: Create directories for config files
  become_user: "{{ username }}"
  file:
    path: "{{ item.path }}"
    state: directory
    owner: "{{ username }}"
    group: "{{ username }}"
    mode: "0644"
  with_items:
    - { path: "{{ home_dir }}/.config" }
    - { path: "{{ home_dir }}/.config/nvim" }
  tags: dotfiles

- name: install zsh
  pacman:
    name: zsh

- name: set zsh as default shell for {{ username }}
  become: true
  user:
    name: "{{ username }}"
    shell: /usr/bin/zsh

- name: install oh-my-zsh
  become_user: "{{ username }}"
  git:
    repo: "https://github.com/robbyrussell/oh-my-zsh"
    dest: "{{ home_dir }}/.oh-my-zsh"
    version: master
    update: no
  tags: zsh, omz, oh-my-zsh

- name: install plugins
  become_user: "{{ username }}"
  git:
    repo: "{{ plugin.repo }}"
    dest: "/{{ home_dir }}/.oh-my-zsh/custom/plugins/{{ plugin.name}}"
    version: "{{ plugin.version | default(omit) }}"
    update: "{{ plugin.update | default(omit) | bool }}"
  with_items: "{{ ohmyzsh_custom_plugins }}"
  loop_control:
    loop_var: plugin
  tags: zsh, omz, oh-my-zsh

- name: Install Powerlevel10k theme
  become_user: "{{ username }}"
  git:
    repo: https://github.com/romkatv/powerlevel10k
    depth: 1
    dest: "{{ home_dir }}/.oh-my-zsh/custom/themes/powerlevel10k"
    update: no
    version: master
  tags: zsh, omz, oh-my-zsh, powerlevel10k, p10k

- name: Install neovim
  pacman:
    name: neovim
    state: present
  tags: neovim

- name: Install Plug to manage neovim packages
  become_user: "{{ username }}"
  shell: |
    sh -c 'curl -fLo "${XDG_DATA_HOME:-$HOME/.local/share}"/nvim/site/autoload/plug.vim --create-dirs https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim'
  tags: neovim

- name: Install neovim packages
  become_user: "{{ username }}"
  command: |
    "nvim --headless -E -s -c 'source {{ home_dir }}/.config/nvim/init.vim' +PlugInstall +qa"
  ignore_errors: true
  tags: neovim

- name: Link dotfiles
  file:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: "{{ username }}"
    group: "{{ username }}"
    mode: "0644"
    force: yes
    state: link
  with_items:
    - { src: "{{ dotfiles_dir }}/nvim/init.vim", dest: "{{ home_dir }}/.config/nvim/init.vim" }
    - { src: "{{ dotfiles_dir }}/aliases/aliases.sh", dest: "{{ home_dir }}/.aliases" }
    - { src: "{{ dotfiles_dir }}/zsh/zshrc", dest: "{{ home_dir }}/.zshrc" }
    - { src: "{{ dotfiles_dir }}/tmux/tmux.conf", dest: "{{ home_dir }}/.tmux.conf" }
    - { src: "{{ dotfiles_dir }}/zsh/p10k.zsh", dest: "{{ home_dir }}/.p10k.zsh" }
  tags: dotfiles, tmux, zsh, neovim, p10k
