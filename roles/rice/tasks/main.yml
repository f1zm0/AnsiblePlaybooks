---

- name: Install X packages
  pacman:
    name: "{{ item }}"
    state: present
  with_items: 
    - xorg
    - xorg-xinit
  tags: xorg

- name: Install window manager
  vars: 
    - wm: "{{ window_manager | default(window_manager) }}"
  pacman:
    name : "{{ wm }}"
    state: present
  tags: window-manager, wm

- name: Install extra packages for window manager
  pacman:
    name: "{{ item }}"
    state: present
  with_items: "{{ window_manager_extras | default(window_manager_extras) }}"
  when: window_manager_extras  != "" or default(window_manager) != ""
  tags: window-manager, wm

- name: Install terminal emulator
  pacman:
    name: kitty
    state: present
  tags: terminal

- name: Install pywal
  pacman:
    name: "{{ item }}"
    state: present
  with_items:
    - python-pywal
    - feh
    - imagemagick
  tags: terminal, colorschemes

- name: Install status bar
  pacman:
    name: polybar
    state: present
  tags: polybar, status-bar

- name: Install app launcher
  pacman:
    name: rofi
    state: present
  tags: rofi, launcher

- name: install notification daemon
  pacman:
    name: dunst
    state: present
  tags: notifications, dunst

- name: Install picom compositor from AUR
  become: yes
  become_user: "{{ username }}"
  command: "yay --noconfirm -S picom-git" 
  tags: picom, compositor 

- name: Install ranger file browser
  pacman:
    name: "{{ item }}"
    state: present
  with_items:
    - ranger
    - ueberzug
  tags: file-browser, ranger

- name: Install nerd fonts from AUR
  become: yes
  become_user: "{{ username }}"
  command: "yay --noconfirm --needed -S {{ package }}"
  with_items: "{{ aur_font_packages | default(aur_font_packages) }}"
  loop_control:
    loop_var: package
  tags: fonts, nerd-fonts

- name: Install icon theme
  pacman:
    name: papirus-icon-theme
    state: present
  tags: icons

- name: Create config directories
  become: yes
  become_user: "{{ username }}"
  file:
    path: "{{ item.path }}"
    state: directory
    owner: "{{ username }}"
    group: "{{ username }}"
    mode: "0755"
  with_items:
    - { path: "{{ home_dir }}/.config/{{ window_manager | default(window_manager) }}" }
    - { path: "{{ home_dir }}/.config/sxhkd" }
    - { path: "{{ home_dir }}/.config/polybar" }
    - { path: "{{ home_dir }}/.config/kitty" }
    - { path: "{{ home_dir }}/.config/picom" }
    - { path: "{{ home_dir }}/.config/ranger" }
    - { path: "{{ home_dir }}/.config/neofetch" }
    - { path: "{{ home_dir }}/.config/dunst" }
  tags: dotfiles

- name: Create local directory for fonts
  become: yes
  become_user: "{{ username }}"
  file:
    path: "{{ home_dir }}/.local/share/fonts"
    state: directory
    owner: "{{ username }}"
    group: "{{ username }}"
    mode: "0744"
  tags: fonts, icons

- name: Copy font files
  become: yes
  become_user: "{{ username }}"
  copy:
    src: "{{ item }}"
    dest: "{{ home_dir }}/.local/share/fonts/{{ item | basename }}"
    owner: "{{ username }}"
    group: "{{ username }}"
    mode: "0644"
  with_fileglob:
    - fonts/*
  tags: fonts, icons

- name: Create local directory for wallpapers
  become: yes
  become_user: "{{ username }}"
  file:
    path: "{{ home_dir }}/Pictures/Wal"
    state: directory
    owner: "{{ username }}"
    group: "{{ username }}"
    mode: "744"
  tags: wallpaper

- name: Copy wallpapers
  become: yes
  become_user: "{{ username }}"
  copy:
    src: "{{ item }}"
    dest: "{{ home_dir }}/Pictures/Wal/{{ item | basename }}"
    owner: "{{ username }}"
    group: "{{ username }}"
    mode: "0644"
    force: true
  with_fileglob:
    - wallpapers/*
  tags: wallpaper

- name: Generate colorscheme files with pywall
  become: yes
  become_user: "{{ username }}"
  command: |
    /usr/bin/wal -i "{{ home_dir }}/Pictures/Wal/bg1.jpg"
  tags: pywal, colorschemes

- name: Link dotfiles and colorschemes
  become: yes
  become_user: "{{ username }}"
  file:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: "{{ username }}"
    group: "{{ username }}"
    mode: "0644"
    force: yes
    state: link
  with_items:
    - { src: "{{ dotfiles_dir }}/xorg/xinitrc", dest: "{{ home_dir }}/.xinitrc" }
    - { src: "{{ dotfiles_dir }}/xorg/Xresources", dest: "{{ home_dir }}/.Xresources" }
    - { src: "{{ dotfiles_dir }}/bspwm/bspwmrc", dest: "{{ home_dir }}/.config/bspwm/bspwmrc" }
    - { src: "{{ dotfiles_dir }}/sxhkd/sxhkdrc", dest: "{{ home_dir }}/.config/sxhkd/sxhkdrc" }
    - { src: "{{ dotfiles_dir }}/polybar/config", dest: "{{ home_dir }}/.config/polybar/config" }
    - { src: "{{ dotfiles_dir }}/polybar/launch.sh", dest: "{{ home_dir }}/.config/polybar/launch.sh" }
    - { src: "{{ dotfiles_dir }}/kitty/kitty.conf", dest: "{{ home_dir }}/.config/kitty/kitty.conf" }
    - { src: "{{ dotfiles_dir }}/picom/picom.conf", dest: "{{ home_dir }}/.config/picom/picom.conf" }
    - { src: "{{ dotfiles_dir }}/ranger/rc.conf", dest: "{{ home_dir }}/.config/ranger/rc.conf" }
    - { src: "{{ dotfiles_dir }}/neofetch/neofetch.conf", dest: "{{ home_dir }}/.config/neofetch/config.conf" }
    - { src: "{{ dotfiles_dir }}/dunst/dunstrc", dest: "{{ home_dir }}/.config/dunst/dunstrc" }
    - { src: "{{ home_dir }}/.cache/wal/colors.Xresources", dest: "{{ home_dir }}/colors.Xresources" }
  tags: dotfiles, colorschemes

- name: Change +x permissions to launcher scripts
  file:
    dest: "{{ home_dir }}/.config/polybar/launch.sh"
    mode: a+x
  tags: dotfiles, polybar

